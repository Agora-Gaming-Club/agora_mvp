name: Agora
on: [push, pull_request]
jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: SSH into server
        env:
          PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.PROD_SSH_HOST }}
          USER_NAME: 'ubuntu'
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              cd /home/ubuntu/agoragaming.gg &&
              git pull &&
              source .venv/bin/activate &&
              sudo apt-get update &&
              sudo apt-get install -y libmysqlclient-dev &&
              pip install -r requirements.txt &&
              python manage.py makemigrations api &&
              python manage.py makemigrations admin_app &&
              python manage.py migrate &&
              npm install &&
              npm run build &&
              python manage.py collectstatic --noinput &&
              sudo service supervisor restart
          '
  deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: SSH into server
        env:
          PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.DEV_SSH_HOST }}
          USER_NAME: 'ubuntu'
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              cd /home/ubuntu/dev.agoragaming.gg &&
              git pull &&
              source .venv/bin/activate &&
              sudo apt-get update &&
              sudo apt-get install -y libmysqlclient-dev &&
              pip install -r requirements.txt &&
              python manage.py makemigrations api &&
              python manage.py makemigrations admin_app &&
              python manage.py migrate &&
              npm install &&
              npm run build &&
              python manage.py collectstatic --noinput &&
              sudo service supervisor restart
          '
